/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var PropTypes = require('prop-types');
var cx = require('classnames');
var iconsReact = require('@carbon/icons-react');
var Menu = require('../Menu/Menu.js');
var useId = require('../../internal/useId.js');
var usePrefix = require('../../internal/usePrefix.js');
var useAttachedMenu = require('../../internal/useAttachedMenu.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

var _excluded = ["children", "className", "renderIcon", "size"];
var defaultSize = 'md';

function OverflowMenuV2(_ref) {
  var _classNames;

  var children = _ref.children,
      className = _ref.className,
      _ref$renderIcon = _ref.renderIcon,
      IconElement = _ref$renderIcon === void 0 ? iconsReact.OverflowMenuVertical : _ref$renderIcon,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? defaultSize : _ref$size,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);

  var id = useId.useId('overflowmenu');
  var prefix = usePrefix.usePrefix();
  var triggerRef = React.useRef(null);

  var _useAttachedMenu = useAttachedMenu.useAttachedMenu(triggerRef),
      open = _useAttachedMenu.open,
      x = _useAttachedMenu.x,
      y = _useAttachedMenu.y,
      handleClick = _useAttachedMenu.handleClick,
      handleMousedown = _useAttachedMenu.handleMousedown,
      handleClose = _useAttachedMenu.handleClose;

  var containerClasses = cx__default["default"]("".concat(prefix, "--overflow-menu__container"));
  var triggerClasses = cx__default["default"]("".concat(prefix, "--overflow-menu"), (_classNames = {}, _rollupPluginBabelHelpers.defineProperty(_classNames, "".concat(prefix, "--overflow-menu--open"), open), _rollupPluginBabelHelpers.defineProperty(_classNames, className, className), _classNames), size !== defaultSize && "".concat(prefix, "--overflow-menu--").concat(size));
  return /*#__PURE__*/React__default["default"].createElement("div", {
    className: containerClasses,
    "aria-owns": id
  }, /*#__PURE__*/React__default["default"].createElement("button", _rollupPluginBabelHelpers["extends"]({}, rest, {
    type: "button",
    "aria-haspopup": true,
    "aria-expanded": open,
    className: triggerClasses,
    onClick: handleClick,
    onMouseDown: handleMousedown,
    ref: triggerRef
  }), /*#__PURE__*/React__default["default"].createElement(IconElement, {
    className: "".concat(prefix, "--overflow-menu__icon")
  })), /*#__PURE__*/React__default["default"].createElement(Menu.Menu, {
    id: id,
    size: size,
    open: open,
    onClose: handleClose,
    x: x,
    y: y
  }, children));
}

OverflowMenuV2.propTypes = {
  /**
   * A collection of MenuItems to be rendered within this OverflowMenu.
   */
  children: PropTypes__default["default"].node,

  /**
   * Additional CSS class names for the trigger button.
   */
  className: PropTypes__default["default"].string,

  /**
   * Otionally provide a custom icon to be rendered on the trigger button.
   */
  renderIcon: PropTypes__default["default"].oneOfType([PropTypes__default["default"].func, PropTypes__default["default"].object]),

  /**
   * Specify the size of the menu, from a list of available sizes.
   */
  size: PropTypes__default["default"].oneOf(['sm', 'md', 'lg'])
};

exports.OverflowMenuV2 = OverflowMenuV2;
