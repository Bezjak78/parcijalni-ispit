/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');

var invalidProps = function invalidProps(invalidId) {
  return {
    'data-invalid': true,
    'aria-invalid': true,
    'aria-describedby': invalidId
  };
};

var warnProps = function warnProps(warnId) {
  return {
    'aria-describedby': warnId
  };
};

var helperProps = function helperProps(helperId) {
  return {
    'aria-describedby': helperId
  };
};
/**
 * @param {{sharedTextInputProps: object, invalid?: boolean, invalidId?: string, warn?: boolean, warnId?: string, hasHelper?: boolean, helperId?: string}} config
 * @returns {object}
 */


var textInputProps = function textInputProps(_ref) {
  var sharedTextInputProps = _ref.sharedTextInputProps,
      invalid = _ref.invalid,
      invalidId = _ref.invalidId,
      warn = _ref.warn,
      warnId = _ref.warnId,
      hasHelper = _ref.hasHelper,
      helperId = _ref.helperId;
  return _rollupPluginBabelHelpers.objectSpread2(_rollupPluginBabelHelpers.objectSpread2(_rollupPluginBabelHelpers.objectSpread2(_rollupPluginBabelHelpers.objectSpread2({}, sharedTextInputProps), invalid ? invalidProps(invalidId) : {}), warn ? warnProps(warnId) : {}), hasHelper ? helperProps(helperId) : {});
};

exports.textInputProps = textInputProps;
