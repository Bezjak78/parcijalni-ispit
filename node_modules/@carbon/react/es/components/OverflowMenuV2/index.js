/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';
import React__default, { useRef } from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import { OverflowMenuVertical } from '@carbon/icons-react';
import { Menu } from '../Menu/Menu.js';
import { useId } from '../../internal/useId.js';
import { usePrefix } from '../../internal/usePrefix.js';
import { useAttachedMenu } from '../../internal/useAttachedMenu.js';

var _excluded = ["children", "className", "renderIcon", "size"];
var defaultSize = 'md';

function OverflowMenuV2(_ref) {
  var _classNames;

  var children = _ref.children,
      className = _ref.className,
      _ref$renderIcon = _ref.renderIcon,
      IconElement = _ref$renderIcon === void 0 ? OverflowMenuVertical : _ref$renderIcon,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? defaultSize : _ref$size,
      rest = _objectWithoutProperties(_ref, _excluded);

  var id = useId('overflowmenu');
  var prefix = usePrefix();
  var triggerRef = useRef(null);

  var _useAttachedMenu = useAttachedMenu(triggerRef),
      open = _useAttachedMenu.open,
      x = _useAttachedMenu.x,
      y = _useAttachedMenu.y,
      handleClick = _useAttachedMenu.handleClick,
      handleMousedown = _useAttachedMenu.handleMousedown,
      handleClose = _useAttachedMenu.handleClose;

  var containerClasses = cx("".concat(prefix, "--overflow-menu__container"));
  var triggerClasses = cx("".concat(prefix, "--overflow-menu"), (_classNames = {}, _defineProperty(_classNames, "".concat(prefix, "--overflow-menu--open"), open), _defineProperty(_classNames, className, className), _classNames), size !== defaultSize && "".concat(prefix, "--overflow-menu--").concat(size));
  return /*#__PURE__*/React__default.createElement("div", {
    className: containerClasses,
    "aria-owns": id
  }, /*#__PURE__*/React__default.createElement("button", _extends({}, rest, {
    type: "button",
    "aria-haspopup": true,
    "aria-expanded": open,
    className: triggerClasses,
    onClick: handleClick,
    onMouseDown: handleMousedown,
    ref: triggerRef
  }), /*#__PURE__*/React__default.createElement(IconElement, {
    className: "".concat(prefix, "--overflow-menu__icon")
  })), /*#__PURE__*/React__default.createElement(Menu, {
    id: id,
    size: size,
    open: open,
    onClose: handleClose,
    x: x,
    y: y
  }, children));
}

OverflowMenuV2.propTypes = {
  /**
   * A collection of MenuItems to be rendered within this OverflowMenu.
   */
  children: PropTypes.node,

  /**
   * Additional CSS class names for the trigger button.
   */
  className: PropTypes.string,

  /**
   * Otionally provide a custom icon to be rendered on the trigger button.
   */
  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),

  /**
   * Specify the size of the menu, from a list of available sizes.
   */
  size: PropTypes.oneOf(['sm', 'md', 'lg'])
};

export { OverflowMenuV2 };
